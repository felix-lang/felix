@title String Handling Library
@h1 Reference.
See <a href="/share/lib/std/strings/string.fdoc">string</a> module.

@h1 Concept.

Felix uses a binding to the C++ string datatype @{::std::basic_string&lt;char&gt;}.




@h1 String subscript and slices.
@felix
//Check String::subscript
print$ "hello how are you".[4]; endl;
print$ "hello how are you".[5 to]; endl;
print$ "hello how are you".[to 7]; endl;
print$ "hello how are you".[3 to 8]; endl;

@expect
o
 how are you
hello h
lo ho
@




@h1 Left trim @{ltrim}.
@felix
//Check String::ltrim
print$ ltrim "hello how are you" "hello"; endl;
print$ ltrim "hello how are you" "goodbye"; endl;

@expect
 how are you
hello how are you
@




@h1 Right trim @{rtrim}.
@felix
//Check String::rtrim
print$ rtrim "hello how are you" "you"; endl;
print$ rtrim "hello how are you" "me"; endl;


@expect
hello how are 
hello how are you
@




@h1 Trim both ends @{trim}.
@felix
//Check String::trim
print$ trim "hello how are you" "me"; endl;
print$ trim "hello how are you" "hello"; endl;
print$ trim "hello how are you" "you"; endl;

print$ trim "hello how are hello" "hello"; endl;
print$ trim "hello how are hello" "goodbye"; endl;

@expect
hello how are you
 how are you
hello how are 
 how are 
hello how are hello
@




@h1 Left strip @{lstrip}.
@felix
//Check String::lstrip
print$ lstrip "  a b c  "; endl;
print$ lstrip "a b c  "; endl;

@expect
a b c  
a b c  
@




@h1 Right strip @{rstrip}.
@felix
//Check String::rstrip
print$ rstrip "  a b c  "; endl;
print$ rstrip "  a b c"; endl;

@expect
  a b c
  a b c
@




@h1 Strip both ends @{strip}.
@felix
//Check String::strip
print$ strip "  a b c  "; endl;
print$ strip "a b c"; endl;

@expect
a b c
a b c
@



