@h1 Borrowing
@felix
// check borrowing
proc check() {
  // explicit wrapping
  fun f(x: _borrowed int) : int => unwrap x;
  var x = wrap 1;
  println$ f x;
  println$ f x;

  // implicit wrapping of shared
  var y = 1;
  println$ f y;
  println$ f y;

  // implicit re-wrapping of uniq 
  var z = box 1;
  println$ f z;
  println$ f z;
  kill z;

  var a = box 1;
  fun g(x:int, y: _borrowed int) : int => x + unwrap y;
  println$ g (1,a);
  println$ g (1,a);
  println$ g (1,(loan a));
  println$ g (1,(loan a));
  kill a;
}
check();
@expect
1
1
1
1
1
1
2
2
2
2
@

